ArrayList<E>
------------
public class ArrayList<E>  extends AbstractList<E> implements List<E>, Serializable, Clonable, RandomAccess
It is a predefined class available in java.util package under List interface from java 1.2v.
It accepts duplicate,null, homogeneous and hetrogeneous elements.
It is dynamically growable array.
It stores the elements on index basis so it is simillar to dynamic array.
Initial capacity of ArrayList is 10. The new capacity of Arraylist can be calculated by using the  formula
new capacity = (current capacity * 3)/2 + 1  [Almost 50% increment]
    newCapacity = (10 * 3) / 2 + 1
            	= 30 / 2 + 1
            	= 15 + 1
            	= 16
*All the methods declared inside an ArrayList is not synchronized so multiple thread can access the method of ArrayList so performance wise it is good.
*It is highly suitable for fetching or retriving operation when duplicates are allowed and Thread-safety is not required.
Here Iterator is Fail Fast Iteartor.
It implements List, Serializable, Clonable, RandomAccess interfcaes

Constructor of ArrayList
------------------------
In ArrayList we have 3 types of Constructor:

1) ArrayList al1 = new ArrayList();
   Will create ArrayList object with default capacity 10.

2) ArrayList al2 = new ArrayList(int initialCapacity);
   Will create an ArrayList object with user specified Capacity

3) ArrayList al3 = new ArrayList(Collection c)
   We can copy any Collection interface implemented class data to the current object reference (Coping one Collection data to another)

----------------------------------------------------------------
How to create Immutable List and Fixed length array :
--------------------------------------------------------------

1) Fixed length Array :

java.util.Arrays class has provided a predefined static method asList(T ...x), It will create a fixed length array and the return type of this method is List interface.
In this fixed length array we can't perform add or remove opeartion otherwise we will get  java.lang.UnsupportedOperationException but we can replace the element.
package com.ravi.arraylist;
import java.util.Arrays;
import java.util.List;

public class FixedLengthArray {

	public static void main(String[] args)
	{
		//Fixed length Array
		List<Integer> list = Arrays.asList(1,2,3,4,5,6,7,8);
        	//list.add(9);   java.lang.UnsupportedOperationException
		//list.remove(0);  java.lang.UnsupportedOperationException
		  list.set(0, 100);
		  System.out.println(list);
	}

}

2) Immutable List :
-------------------
List interface has provided a predefined static method called
of(T ...x) available from java 9V.

It will create an immutable list, return type of this method is
List<E>. Once it is created after that we can't pefrom any kind of operation like add(), remove() or replace [set(int index, Object obj)] otherwise we will get java.lang.UnsupportedOperationException

package com.ravi.arraylist;

import java.util.List;

public class ImmutableList {

	public static void main(String[] args)
	{
		List<Integer> immutable = List.of(1,2,3,4,5,6,7,8);
		//immutable.add(9);  java.lang.UnsupportedOperationException
        	//immutable.remove(0); java.lang.UnsupportedOperationException
		//immutable.set(0, 90); java.lang.UnsupportedOperationException
        	System.out.println(immutable);

	}

}
