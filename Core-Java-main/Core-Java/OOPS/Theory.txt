Object-Oriented Programming (OOPs) in Java

OOPs is a programming paradigm based on the concept of objects that contain data (fields) and methods (functions).
Java is an object-oriented programming language that uses OOP principles.


Core OOPs Concepts:--

1)Class:

A blueprint for creating objects.
Defines properties (fields) and behaviors (methods).

2)Object:

An instance of a class.
Created using the new keyword.

3)Encapsulation:

Restricts direct access to fields and provides controlled access using methods (getters and setters).

4)Inheritance:

Allows one class to acquire the properties and methods of another class.

5)Polymorphism:

Allows objects to take many forms.

Achieved through method overloading and method overriding.

6)Abstraction:

Hides implementation details and shows only functionality.

Achieved using abstract classes and interfaces.


**Important OOPs Keywords in Java**
1) this:--	Refers to the current object instance.
2) super:--	Refers to the parent class's methods or constructor.
3) final:--	Used to declare constants, prevent inheritance, or overriding.
4) static:--	Used for class-level methods or variables.
5) abstract:--	Declares a class or method as abstract.
